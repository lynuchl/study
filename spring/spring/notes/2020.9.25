1.在实际的开发中，应该做到编译器不依赖，运行时才依赖。其实IOC的解耦实际上是降低编译期的依赖，但是在执行期是不会改变的，这样做的目的是为了代码好维护修改，但并不是提高系统执行效率。

2.获取类对象:(1)object.getClass(),(2)利用类.class,(3)利用Class类的static方法。在反射中，所有的对象都用object表示，所以通过反射获得了对象后，并不能直接调用其方法，而是通过Class对象调用其中所有的
方法后使用Method.invoke(object)进行调用。

3.工厂模式解耦:利用反射的方式，获取实例化对象，不需要直接创建的方式。
